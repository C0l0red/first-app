[{"/home/red/Documents/Practice/node/express/first-app/client/src/index.js":"1","/home/red/Documents/Practice/node/express/first-app/client/src/reportWebVitals.js":"2","/home/red/Documents/Practice/node/express/first-app/client/src/App.js":"3","/home/red/Documents/Practice/node/express/first-app/client/src/components/Page.jsx":"4","/home/red/Documents/Practice/node/express/first-app/client/src/components/TodoList.jsx":"5","/home/red/Documents/Practice/node/express/first-app/client/src/components/AddTodo.jsx":"6","/home/red/Documents/Practice/node/express/first-app/client/src/components/TodoItem.jsx":"7","/home/red/Documents/Practice/node/express/first-app/client/src/components/Aside.jsx":"8"},{"size":521,"mtime":1608167744930,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608164179746,"results":"11","hashOfConfig":"10"},{"size":316,"mtime":1608607704272,"results":"12","hashOfConfig":"10"},{"size":3597,"mtime":1608678630628,"results":"13","hashOfConfig":"10"},{"size":1346,"mtime":1608577532448,"results":"14","hashOfConfig":"10"},{"size":896,"mtime":1608197106172,"results":"15","hashOfConfig":"10"},{"size":4261,"mtime":1608744141280,"results":"16","hashOfConfig":"10"},{"size":657,"mtime":1608678758041,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hfg4jg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/home/red/Documents/Practice/node/express/first-app/client/src/index.js",[],["37","38"],"/home/red/Documents/Practice/node/express/first-app/client/src/reportWebVitals.js",[],"/home/red/Documents/Practice/node/express/first-app/client/src/App.js",[],"/home/red/Documents/Practice/node/express/first-app/client/src/components/Page.jsx",[],"/home/red/Documents/Practice/node/express/first-app/client/src/components/TodoList.jsx",[],"/home/red/Documents/Practice/node/express/first-app/client/src/components/AddTodo.jsx",["39","40","41"],"import React, { useState } from 'react'\nimport { Button, Form, Grid, Input, Segment } from 'semantic-ui-react'\n\nexport default function AddTodo({addItem}) {\n    const [item, setItem] = useState();\n    function handleSubmit(event){\n        addItem(item)\n        setItem('')\n    }\n    return (\n        <>\n            <Grid.Column width='10'>\n                <Form.Input \n                    value={item} icon={{name:'plus'}} iconPosition='left' size='large' fluid\n                    onChange={(e) => setItem(e.target.value)} placeholder='New Item' />\n            </Grid.Column>\n            <Grid.Column width='4'>\n                <Form.Button  \n                    content='Add' fluid\n                    size='large'\n                    onClick={handleSubmit} \n                    disabled={item ? false : true} \n                    color='blue' />\n            </Grid.Column>\n        </>\n    )\n}\n","/home/red/Documents/Practice/node/express/first-app/client/src/components/TodoItem.jsx",["42","43"],"/home/red/Documents/Practice/node/express/first-app/client/src/components/Aside.jsx",["44","45"],"import React from 'react'\nimport { Segment } from 'semantic-ui-react'\n\nexport default function Aside({categories, useCurrent}) {\n    const [current, setCurrent] = useCurrent\n    return (\n        <aside>\n            <Segment.Group style={{marginTop: \"15px\"}}>\n                {\n                    categories.map((name, index) => {\n                        return(\n                            <Segment padded>\n                                <a onClick={() => setCurrent(name)} href=\"#\">{name} </a>\n                            </Segment>\n                        )\n                    })\n                }\n            </Segment.Group>\n        </aside>\n    )\n}\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":2,"column":30,"nodeType":"52","messageId":"53","endLine":2,"endColumn":35},{"ruleId":"50","severity":1,"message":"55","line":2,"column":37,"nodeType":"52","messageId":"53","endLine":2,"endColumn":44},{"ruleId":"50","severity":1,"message":"56","line":2,"column":43,"nodeType":"52","messageId":"53","endLine":2,"endColumn":46},{"ruleId":"50","severity":1,"message":"57","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},{"ruleId":"50","severity":1,"message":"58","line":5,"column":12,"nodeType":"52","messageId":"53","endLine":5,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":13,"column":33,"nodeType":"61","endLine":13,"endColumn":78},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Segment' is defined but never used.","'Ref' is defined but never used.","'ItemName' is defined but never used.","'current' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]